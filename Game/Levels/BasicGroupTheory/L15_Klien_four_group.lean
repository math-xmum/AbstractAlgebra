import Game.Metadata

World "BasicGroupTheory"

Level 15

Introduction "
Let H be a subgroup of G.
The set of all left cosets of H is denoted by
G/H:= {g • H | g ∈ G}.

The cardinality of G/H is called the index of H in G.
Note that there is a natural surjection π : G → G/H given by g ↦ gH. Then the fiber π(gH) is gH. We have shown that gH and g'H have a bijection between then. In particular
|G| = |G/H| * |H|. This is called the Lagrange theorem.

In particular, the order of any subgroup is a divisor of the order of the group (when the group is finite).


Recall that a group G is called cyclic if there is an element g ∈ G such that every element in G can be written as g^n for some n ∈ ℤ.

We now prove that if the cardinality of G is a prime number
then it must be a cyclic group.

Pick an element 1 ≠ g ∈ G. The strategy is to prove that the subgroup generated by g is the whole group.
"

open Monoid Group
open scoped Pointwise



theorem C2_prod_C2_not_cyclic {C : Type u_1} [Group C] [Fintype C]  (h : Nat.card C = 2) : ¬ IsCyclic (C × C) := by
  intro H
  Hint "First observe that |C × C| = 4. This is a consequence of `Nat.card_prod` and {h}."
  have order4 : Nat.card (C × C) = 4 := by simp only [Nat.card_prod,h]
  Hint "If G is a finite cyclic group, then there is an element g ∈ G such that g^|G| = 1. This is the theorem `IsCyclic.exists_ofOrder_eq_natCard`. Establish this claim by using
  `replace H := IsCyclic.exists_ofOrder_eq_natCard (h:=H)`
  "
  replace h1 := IsCyclic.exists_ofOrder_eq_natCard (h:=H)
  Hint "Rewrite the claim {H} using {order4}."
  rw [order4] at h1
  Hint "On the other hand, every element g in C × C satisfies
  g^2 = 1, which implies that they have order less than or equal to 2.

  This is because all elements in C satisfy c^2 = 1 by `pow_card_eq_one'` which stats g^(Nat.card G) = 1.
  Since `pow_card_eq_one'` is marked as @[simp],
  one establish the claim by
  `have square_one (c : C × C) : c ^ 2 = 1 := by simp [<-h]`
  "
  have square_one (c : C) : c ^ 2 = 1 := by simp [<-h]
  Hint "Now we can establish g^2 =1 for all g∈ C×C.
  Note that g^2 =1 means g.1^2 = 1 and g.2^2 =1.
  This is the place we must invoke `ext` tactic.
  Then one can close the goal simply by `simp [square_one]`
  "
  replace square_one (c : C × C) : c ^ 2 = 1 := by
    ext<;>simp [square_one]
  Hint "Look the statement of `orderOf_le_of_pow_eq_one`"
  have orderle2 : ∀ g : C × C, orderOf g ≤ 2 := by
    intro g
    apply orderOf_le_of_pow_eq_one
    Hint "Use `norm_num` or `linarith`"
    linarith
    Hint "Use {square_one} to clear up the goal."
    simp [square_one]
  Hint "{order4} and {orderle2} are contradictory.
  To finish the proof, first take an element g satisfying {h1} by `obtain` tactic."
  obtain ⟨g, hg⟩ := h1
  Hint "Now `specialize` {orderle2} to g."
  specialize orderle2 g
  Hint "Clearly {hg} and {orderle2} are contradictory relations for natural numbers. These type of problem can be automaticaly proved by `linarith`."
  linarith
